#![allow(bad_style, unused)]
use libc::types::os::common::bsd44::*;

/* automatically generated by rust-bindgen */

pub type utp_crust_socket = ::libc::c_int;
pub type Enum_utp_crust_event_code_t = ::libc::c_uint;
pub const UTP_CRUST_SOCKET_CLEANUP: ::libc::c_uint = 0;
pub const UTP_CRUST_NEW_CONNECTION: ::libc::c_uint = 1;
pub const UTP_CRUST_LOST_CONNECTION: ::libc::c_uint = 2;
pub const UTP_CRUST_NEW_MESSAGE: ::libc::c_uint = 3;
pub const UTP_CRUST_SEND_QUEUE_STATUS: ::libc::c_uint = 4;
pub type utp_crust_event_code = Enum_utp_crust_event_code_t;
pub type utp_crust_event_callback =
    ::std::option::Option<extern "C" fn(socket: utp_crust_socket,
                                        ev: utp_crust_event_code,
                                        data: *const ::libc::c_void,
                                        bytes: ::libc::size_t,
                                        privdata: *mut ::libc::c_void) -> ()>;
pub type Enum_utp_crust_flags_t = ::libc::c_uint;
pub const UTP_CRUST_LISTEN: ::libc::c_uint = 1;
pub type utp_crust_flags = Enum_utp_crust_flags_t;
extern "C" {
    pub fn utp_crust_create_socket(socket: *mut utp_crust_socket,
                                   port: *mut ::libc::c_ushort,
                                   flags: ::libc::c_uint,
                                   callback: utp_crust_event_callback,
                                   privdata: *mut ::libc::c_void)
     -> ::libc::c_int;
    pub fn utp_crust_set_data(socket: utp_crust_socket,
                              data: *mut ::libc::c_void) -> ();
    pub fn utp_crust_get_data(socket: utp_crust_socket)
     -> *mut ::libc::c_void;
    pub fn utp_crust_connect(socket: utp_crust_socket,
                             addr: *const sockaddr, len: socklen_t)
     -> ::libc::c_int;
    pub fn utp_crust_send(socket: utp_crust_socket,
                          buf: *const ::libc::c_void, bytes: ::libc::size_t)
     -> ::libc::c_int;
    pub fn utp_crust_flush(socket: utp_crust_socket) -> ::libc::c_int;
    pub fn utp_crust_destroy_socket(socket: utp_crust_socket,
                                    wait: ::libc::c_int) -> ::libc::c_int;
}
